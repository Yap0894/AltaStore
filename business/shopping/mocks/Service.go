// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	request "AltaStore/api/v1/shopping/request"

	mock "github.com/stretchr/testify/mock"

	shopping "AltaStore/business/shopping"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// DeleteItemInShopCart provides a mock function with given fields: cartId, productid
func (_m *Service) DeleteItemInShopCart(cartId string, productid string) error {
	ret := _m.Called(cartId, productid)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(cartId, productid)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetShopCartDetailById provides a mock function with given fields: id
func (_m *Service) GetShopCartDetailById(id string) (*shopping.ShopCartDetail, error) {
	ret := _m.Called(id)

	var r0 *shopping.ShopCartDetail
	if rf, ok := ret.Get(0).(func(string) *shopping.ShopCartDetail); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shopping.ShopCartDetail)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetShoppingCartByUserId provides a mock function with given fields: userid
func (_m *Service) GetShoppingCartByUserId(userid string) (*shopping.ShoppCart, error) {
	ret := _m.Called(userid)

	var r0 *shopping.ShoppCart
	if rf, ok := ret.Get(0).(func(string) *shopping.ShoppCart); ok {
		r0 = rf(userid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shopping.ShoppCart)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ModifyItemInShopCart provides a mock function with given fields: cartId, productid, item
func (_m *Service) ModifyItemInShopCart(cartId string, productid string, item *request.DetailItemInShopCart) error {
	ret := _m.Called(cartId, productid, item)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, *request.DetailItemInShopCart) error); ok {
		r0 = rf(cartId, productid, item)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewItemInShopCart provides a mock function with given fields: cartId, item
func (_m *Service) NewItemInShopCart(cartId string, item *request.DetailItemInShopCart) error {
	ret := _m.Called(cartId, item)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *request.DetailItemInShopCart) error); ok {
		r0 = rf(cartId, item)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewShoppingCart provides a mock function with given fields: userid, description
func (_m *Service) NewShoppingCart(userid string, description string) (*shopping.ShoppCart, error) {
	ret := _m.Called(userid, description)

	var r0 *shopping.ShoppCart
	if rf, ok := ret.Get(0).(func(string, string) *shopping.ShoppCart); ok {
		r0 = rf(userid, description)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shopping.ShoppCart)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(userid, description)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
